export default [
    {
        "title": "Home",
        "fileName": "index.html",
        "text": "Home ChatterBINGO ChatterBINGO - the only community-created app used at a Dreamforce conference! To see the AppExchange listing, go to https://appexchange.salesforce.com/listingDetail?listingId=a0N30000003JfOwEAK"
    },
    {
        "title": "BINGOController",
        "fileName": "BINGOController.html",
        "text": "BINGOController BingoController controls the BINGO page and both BINGO components. Signature global with sharing class BINGOController Authors Chris Shackelford, David Schach, Brad Gross Since 2.1 2011-02-18 BINGOController Properties Name Signature allusers private List<User> allusers bingos public List<User> bingos me public User me myid private Id myid QUERY_LIMIT private static final Integer QUERY_LIMIT TOTAL_SQUARES private static final Integer TOTAL_SQUARES user1 public User user1 user10 public User user10 user11 public User user11 user12 public User user12 user13 public User user13 user14 public User user14 user15 public User user15 user16 public User user16 user17 public User user17 user18 public User user18 user19 public User user19 user2 public User user2 user20 public User user20 user21 public User user21 user22 public User user22 user23 public User user23 user24 public User user24 user25 public User user25 user3 public User user3 user4 public User user4 user5 public User user5 user6 public User user6 user7 public User user7 user8 public User user8 user9 public User user9 userids private Set<Id> userids BINGOController Constructors BingoController() The constructor for BingoController BingoController() The constructor for BingoController Signature public BingoController() BINGOController Methods getChooseRender() Take parameter and determine how to render the card newCard() Method NewCard navigates to the same Visualforce page, but flushes the cache and performs a GET. It does NOT place any 'p' parameter in the URL, so the new page renders as html. This effectively reshuffles the BINGO card. showAsPDF() Method showAsPDF navigates to the same Visualforce page, but flushes the cache and performs a GET. It also places the 'p' parameter in the URL, so ChooseRender  returns 'pdf' to the page RenderAs attribute. Note: This also reshuffles the BINGO card, so this does NOT merely display the current BINGO card as a pdf. getChooseRender() Take parameter and determine how to render the card Signature public String getChooseRender() Returns String  Render as pdf or on-screen newCard() Method NewCard navigates to the same Visualforce page, but flushes the cache and performs a GET. It does NOT place any 'p' parameter in the URL, so the new page renders as html. This effectively reshuffles the BINGO card. Signature public PageReference newCard() Returns PageReference  refreshed page showAsPDF() Method showAsPDF navigates to the same Visualforce page, but flushes the cache and performs a GET. It also places the 'p' parameter in the URL, so ChooseRender  returns 'pdf' to the page RenderAs attribute. Note: This also reshuffles the BINGO card, so this does NOT merely display the current BINGO card as a pdf. Signature public PageReference showAsPDF() Returns PageReference  New Page, as PDF"
    },
    {
        "title": "BingoControllerTest",
        "fileName": "BingoControllerTest.html",
        "text": "BingoControllerTest Test code for ChatterBINGO Signature @isTest private class BingoControllerTest Authors Chris Shackelford, David Schach, Brad Gross Since 2.1 2011-02-18 BingoControllerTest Properties Name Signature theProfile public static Profile theProfile BingoControllerTest Methods createRandomWord() Random words are required for testing as you will likely run into any word I can insert during a test class and produce false test results. createTestUser(p) Creates a new User getSuperProfile() Helper method to find a ModifyAllData User profile for each of the test users we create. testBINGO0() TestMethod - inserts 0 users, has them each follow the running User, and renders the BINGO card. This method also verifies that the card is first shown as a html page, not a pdf. testBINGO2() TestMethod - inserts 2 users, has them each follow the running User, and renders the BINGO card. It also has the running User follow each of the 2 inserted users. This is because the BINGO card draws from a User's followers and from those users who follow the User. testBINGO30() TestMethod - inserts 30 users, has them each follow the running User, and renders the BINGO card. testShowAsPDF() TestMethod - inserts 0 users, has them each follow the running User, and renders the BINGO card as a PDF. createRandomWord() Random words are required for testing as you will likely run into any word I can insert during a test class and produce false test results. Signature public static String createRandomWord() Returns String  random word createTestUser(p) Creates a new User Signature public static User createTestUser(Profile p) Parameters p Type: Profile User Profile Returns User  Created User testUser Author David Schach getSuperProfile() Helper method to find a ModifyAllData User profile for each of the test users we create. Signature public static Profile getSuperProfile() Returns Profile testBINGO0() TestMethod - inserts 0 users, has them each follow the running User, and renders the BINGO card. This method also verifies that the card is first shown as a html page, not a pdf. Signature @isTest private static void testBINGO0() Author David Schach testBINGO2() TestMethod - inserts 2 users, has them each follow the running User, and renders the BINGO card. It also has the running User follow each of the 2 inserted users. This is because the BINGO card draws from a User's followers and from those users who follow the User. Signature @isTest private static void testBINGO2() testBINGO30() TestMethod - inserts 30 users, has them each follow the running User, and renders the BINGO card. Signature @isTest private static void testBINGO30() testShowAsPDF() TestMethod - inserts 0 users, has them each follow the running User, and renders the BINGO card as a PDF. Signature @isTest private static void testShowAsPDF()"
    }
];
