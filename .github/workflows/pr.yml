# Unique name for this workflow
name: PR Validation
# Definition when the workflow should run
on:
  pull_request:
    types: [edited, opened, synchronize, reopened, review_requested]
    paths:
      - 'force-app/**'
      - 'pmd/**'
  workflow_dispatch:
# Jobs to be executed
jobs:
  scratch-org-apex-tests:
    runs-on: ubuntu-latest
    if: ${{ github.actor != 'dependabot[bot]' }}
    steps:
      # Checkout the source code
      - name: 'Checkout source code'
        uses: actions/checkout@v3

      # Install Salesforce CLI
      - name: 'Install Salesforce sfdx CLI'
        run: |
          npm install sfdx-cli --location=global
          nodeInstallPath=$(npm config get prefix)
          echo "$nodeInstallPath/bin" >> $GITHUB_PATH
          sfdx --version

      - name: 'Install Salesforce sf CLI'
        run: |
          npm install @salesforce/cli --global
          sf --version

      # Store secret for dev hub
      - name: 'Populate auth file with DEVHUB_SFDX_URL secret'
        shell: bash
        run: |
          echo ${{ secrets.DEVHUB_SFDX_URL}} > ./DEVHUB_SFDX_URL.txt
          secretFileSize=$(wc -c "./DEVHUB_SFDX_URL.txt" | awk '{print $1}')
          if [ $secretFileSize == 1 ]; then
              echo "Missing DEVHUB_SFDX_URL secret. Is this workflow running on a fork?";
              exit 1;
          fi
      # Authenticate dev hub
      - name: 'Authenticate Dev Hub'
        run: sf org login sfdx-url --sfdx-url-file ./DEVHUB_SFDX_URL.txt --alias devhub --set-default-dev-hub

      # Add namespace to project config
      - name: Add namespace to project config
        run: |
          sed -i 's,"namespace": "","namespace": "",' sfdx-project.json

      # Create scratch org
      - name: 'Create scratch org'
        run: sf org create scratch --definition-file config/project-scratch-def.json --alias ChatterBINGO --set-default --no-ancestors --duration-days 1 --wait 20 --target-dev-hub devhub

      # Deploy source to scratch org
      - name: 'Push source to scratch org'
        run: sf project deploy start

      # Run Apex tests in scratch org
      - name: 'Run Apex tests'
        run: sf apex run test --code-coverage --detailed-coverage --result-format human --wait 20 --test-level RunLocalTests --output-dir ./

      # Upload code coverage to Codecov.io
      - name: 'Upload code coverage for Apex to Codecov.io'
        uses: codecov/codecov-action@v3
        with:
          flags: Apex
          token: ${{ secrets.CODECOV_TOKEN }}

      # Housekeeping
      - name: 'Delete scratch org'
        if: always()
        run: sf org delete scratch --no-prompt --target-org ChatterBINGO

      # Remove namespace from project config
      - name: Remove namespace from project config
        run: |
          sed -i 's,"namespace": "","namespace": "",' sfdx-project.json

  sfdx-scanner:
    runs-on: ubuntu-latest
    if: ${{ github.actor != 'dependabot[bot]' }}
    steps:
      # Checkout the source code
      - name: 'Checkout source code'
        uses: actions/checkout@v3

      - name: Install SFDX CLI and Scanner
        run: |
          npm install sfdx-cli -g
          sfdx plugins:install @salesforce/sfdx-scanner

      - name: Run SFDX Scanner - Report findings as comments
        uses: mitchspano/sfdx-scan-pull-request@v0.1.14
        with:
          pmdconfig: 'pmd/ruleset.xml'
          severity-threshold: 2
          engine: 'pmd'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
